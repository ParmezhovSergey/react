{"version":3,"file":"static/js/243.21e0732d.chunk.js","mappings":"gLACA,GAAgB,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,2B,mBCW1I,EATmB,SAACA,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACE,UAAC,KAAD,CAASC,GAAIJ,EAAb,UAAoBD,EAAMM,KAA1B,UCDN,EAJgB,SAACN,GACf,OAAO,gBAAKG,UAAWC,EAAAA,QAAhB,SAA4BJ,EAAMO,W,iDC+BrCC,GAAcC,EAAAA,EAAAA,GAAiB,IAmB/BC,GAAuBC,EAAAA,EAAAA,GAAU,CACrCC,KAAM,yBADqBD,EAjBL,SAACX,GACvB,OACE,kBAAMa,SAAUb,EAAMc,aAAtB,WACE,0BACE,SAACC,EAAA,EAAD,CACEC,UAAWC,EAAAA,GACXX,KAAK,iBACLY,YAAY,oGACZC,SAAU,CAACC,EAAAA,EAAUZ,QAGzB,0BACE,gGASR,EAhDgB,SAACR,GACf,IAAIqB,EAAQrB,EAAMsB,YAEdC,EAAiBF,EAAMG,YAAYC,KAAI,SAACC,GAAD,OACzC,SAAC,EAAD,CAAYpB,KAAMoB,EAAOpB,KAAsBJ,GAAIwB,EAAOxB,IAAtBwB,EAAOxB,OAGzCyB,EAAiBN,EAAMO,YAAYH,KAAI,SAAClB,GAAD,OACzC,SAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQL,OAOlD,OACE,iBAAKC,UAAWC,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,YAAhB,SAAgCmB,KAChC,iBAAKpB,UAAWC,EAAAA,SAAhB,WACE,+BAAOuB,EAAP,QACA,SAACjB,EAAD,CAAsBG,SATR,SAACgB,GACnB7B,EAAM8B,YAAYD,EAAOE,0B,oECfzBC,EAA6B,SAACX,GAAD,MAAY,CAC3CY,OAAQZ,EAAMa,KAAKD,SCarB,GAAeE,E,QAAAA,KACbC,EAAAA,EAAAA,KAfoB,SAACf,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACe,GACxB,MAAO,CACLP,YAAa,SAACC,GACZM,GAASC,EAAAA,EAAAA,GAAmBP,UDLF,SAACQ,GAAe,IACxCC,EADuC,0IAE3C,WACE,OAAKC,KAAKzC,MAAMiC,QACT,SAACM,GAAD,UAAeE,KAAKzC,SADI,SAAC,KAAD,CAAUK,GAAI,eAHJ,GACbqC,EAAAA,WAUhC,OAHmCN,EAAAA,EAAAA,IAAQJ,EAARI,CACjCI,KCCJ,CAGEG","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItem\":\"Dialogs_dialogsItem__VE52U\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={path}>{props.name} </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControl/formsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElement = state.dialogsData.map((dialog) => (\r\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\r\n  ));\r\n\r\n  let messageElement = state.messageData.map((message) => (\r\n    <Message message={message.message} key={message.id} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItem}>{dialogsElement}</div>\r\n      <div className={s.messages}>\r\n        <div> {messageElement} </div>\r\n        <AddMesssageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMesssageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"введите сообщение\"\r\n          validate={[required, maxLength50]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button> отправить</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst AddMesssageFormRedux = reduxForm({\r\n  form: \"dialogAddMesssageForm\",\r\n})(AddMesssageForm);\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\n      return <Component {...this.props} />;\n    }\n  }\n\n  let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n  return ConnectAuthRedirectComponent;\n};\n","import { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"names":["props","path","id","className","s","to","name","message","maxLength50","maxLengthCreator","AddMesssageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","state","dialogsPage","dialogsElement","dialogsData","map","dialog","messageElement","messageData","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}